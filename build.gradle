buildscript {
    ext {
        springBootVersion = '1.3.3.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'idea'
apply plugin: 'groovy'
apply plugin: 'java'

sourceCompatibility = 1.8


allprojects {
    group = 'com.nobita'
    version = '0.0.1-SNAPSHOT'

    apply plugin: 'java'
}

repositories {
    mavenCentral()
}

subprojects {
    apply plugin: 'maven'
    apply plugin: 'findbugs'
    apply plugin: 'checkstyle'
    apply plugin: 'jacoco'

    repositories {
        mavenCentral()
        jcenter()
    }

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    compileJava.options.encoding = 'UTF-8'
    compileTestJava.options.encoding = 'UTF-8'

    dependencies {
        testCompile 'junit:junit:4.12'
        testCompile 'org.mockito:mockito-core:1.10.19'
        testCompile 'org.powermock:powermock-module-junit4:1.6.4'
        testCompile 'org.powermock:powermock-api-mockito:1.6.4'
    }

    task deps(type: DependencyReportTask) {
    }

    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
    }

    task testsJar(type: Jar, dependsOn: classes) {
        classifier = 'tests'
        from sourceSets.test.output
    }

    artifacts {
        archives testsJar
    }

    findbugs {
        effort = 'max'
        reportLevel = 'high'
        ignoreFailures = true
        excludeFilter = file("${rootProject.projectDir}/findbugs-exclude.xml")
    }

    tasks.withType(FindBugs) {
        reports {
            xml.enabled = false
            html.enabled = true
        }
    }

    jacocoTestReport {
        // exclude classes generated by Immutables
        afterEvaluate {
            classDirectories = files(classDirectories.files.collect {
                fileTree(dir: it, exclude: ['**/Immutable*'])
            })
        }
    }

    // "./gradlew check" runs jacocoTestReport
    check.dependsOn('jacocoTestReport')

    checkstyle {
        configFile = rootProject.file('checkstyle.xml')
        toolVersion = '6.14.1'
        ignoreFailures = true
    }
}

task stage {
    dependsOn build
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.11'
}
